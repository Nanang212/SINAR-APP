version: "3.8"

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sinar_frontend
    restart: always
    ports:
      - "4173:4173"
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://backend:3000/api
      - VITE_API_TIMEOUT=30000
      - VITE_APP_NAME=SINAR Web Application
      - VITE_APP_VERSION=1.0.0
      - VITE_HOST=0.0.0.0
      - VITE_PORT=4173
    depends_on:
      - backend
    networks:
      - sinar_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend service (connects to existing backend)
  backend:
    image: sinar_backend:latest  # Assumes backend image is already built
    container_name: sinar_backend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    env_file:
      - .env.backend  # Backend environment file
    networks:
      - sinar_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database service
  postgres:
    image: postgres:17
    container_name: sinar_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mentri
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sinar_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # File storage service
  minio:
    image: quay.io/minio/minio
    container_name: sinar_minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    networks:
      - sinar_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: sinar_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro  # SSL certificates (if using HTTPS)
    depends_on:
      - frontend
      - backend
    networks:
      - sinar_network
    profiles:
      - production  # Only start in production profile

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local

networks:
  sinar_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16